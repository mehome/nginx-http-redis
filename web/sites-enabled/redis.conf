upstream redisbackend {
  server redis:6379;
}

upstream backend_node {
  server appnode:4000;
}

upstream backend_rails {
  server apprails:3000;
}

server {
  listen 80;

  location /index.html  {
    root /usr/share/nginx/html;
    index index.html;
  }

  #location / {
  #  set $redis_key $uri;
  #  set $redis_db 10;

  #  redis_pass     redisbackend;
  #  default_type   text/html;
  #  error_page     404 = @fallback_node;
  #}

  # 测试请求通过 redis 缓存无效后到达 app，和直接到达 app 的性能差异
  location /to-app-directly {
    include /etc/nginx/partial/rails.conf;
  }

  location / {
    set $redis_key $uri;
    set $redis_db 10;

    redis_pass     redisbackend;
    default_type   text/html;
    error_page     404 = @fallback_rails;
  }

  location @fallback_node {
    proxy_pass http://backend_node;
  }

  location @fallback_rails {
    include /etc/nginx/partial/rails.conf;
  }
}

# 直接触发 redis 缓存更新
server {
  listen 81;

  location / {
    auth_basic "please input guest pass key";
    auth_basic_user_file /etc/nginx/conf/passwd/store.db;

    include /etc/nginx/partial/rails.conf;
  }
}
